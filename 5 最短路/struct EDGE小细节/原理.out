我写图的时候，边的struct喜欢同时记录起点u和终点v，而如果用邻接表的话几乎永远不会用到u，所以我试着把Dijkstra里边记的u去掉，想着以此降低内存。
结果没想到内存一点没降，速度反而慢了！原来只有62ms！(①)
后来想到《深入理解计算机系统》里讲的struct内存的排法，测试了几种只有细微区别的struct EDGE，果然就是这个原因(以下都是在64位下测试的)
我的猜想是如果v这个占4byte的int在一个8byte寄存器前半部分，那每次出现v的时候就需要一个额外操作把它挪到8byte的后半部分(也有可能是要把它挪到一个处理32位运算的地方)，而v在后半部分的话就省了这步，由于v的访问非常频繁所以导致了这个问题
基于C/C++排struct里内存的方法，少声明一个u不仅不会省内存，反而让v跑到8byte的前半部分了，而②③④都避免了这个问题
图里画出了这几种写法的EDGE中内存的安排